name: Build Rust Binaries

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: grimoire-linux
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact: grimoire-macos-intel
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact: grimoire-macos-arm
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: grimoire-windows.exe

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
    
    - name: Install OpenCV (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libopencv-dev clang libclang-dev
    
    - name: Install OpenCV (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install opencv
        echo "OPENCV_LINK_LIBS=opencv4" >> $GITHUB_ENV
        echo "OPENCV_LINK_PATHS=/opt/homebrew/lib,/usr/local/lib" >> $GITHUB_ENV
    
    - name: Install OpenCV (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install opencv -y
        echo "OPENCV_LINK_LIBS=opencv_world4" | Out-File -FilePath $env:GITHUB_ENV -Append
    
    - name: Build
      run: |
        cargo build --release --target ${{ matrix.target }}
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: target/${{ matrix.target }}/release/grimoire*